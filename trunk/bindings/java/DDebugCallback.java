/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.doubango.tinyWRAP;

public class DDebugCallback {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected DDebugCallback(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DDebugCallback obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        tinyWRAPJNI.delete_DDebugCallback(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public DDebugCallback() {
    this(tinyWRAPJNI.new_DDebugCallback(), true);
  }

  public int OnDebugInfo(String message) {
    return tinyWRAPJNI.DDebugCallback_OnDebugInfo(swigCPtr, this, message);
  }

  public int OnDebugWarn(String message) {
    return tinyWRAPJNI.DDebugCallback_OnDebugWarn(swigCPtr, this, message);
  }

  public int OnDebugError(String message) {
    return tinyWRAPJNI.DDebugCallback_OnDebugError(swigCPtr, this, message);
  }

  public int OnDebugFatal(String message) {
    return tinyWRAPJNI.DDebugCallback_OnDebugFatal(swigCPtr, this, message);
  }

}
