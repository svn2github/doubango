/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://smc.sourceforge.net/)
 * from file : tsip_dialog_subscribe.sm
 */

#ifndef _H_TSIP_DIALOG_SUBSCRIBE_SM
#define _H_TSIP_DIALOG_SUBSCRIBE_SM

#include <statemap.h>


struct tsip_dialog_subscribe;
struct tsip_dialog_subscribeContext;

struct tsip_dialog_subscribeState
{
    void(*Entry)(struct tsip_dialog_subscribeContext*);

    void(*sm_1xx)(struct tsip_dialog_subscribeContext*, const tsip_message_t*);
    void(*sm_2xx)(struct tsip_dialog_subscribeContext*, int, const tsip_response_t*);
    void(*sm_300_to_699)(struct tsip_dialog_subscribeContext*, const tsip_response_t*);
    void(*sm_401_407_421_494)(struct tsip_dialog_subscribeContext*, const tsip_response_t*);
    void(*sm_423)(struct tsip_dialog_subscribeContext*, const tsip_response_t*);
    void(*sm_NOTIFY)(struct tsip_dialog_subscribeContext*, int, const tsip_request_t*);
    void(*sm_cancel)(struct tsip_dialog_subscribeContext*);
    void(*sm_error)(struct tsip_dialog_subscribeContext*);
    void(*sm_hangup)(struct tsip_dialog_subscribeContext*);
    void(*sm_refresh)(struct tsip_dialog_subscribeContext*);
    void(*sm_send)(struct tsip_dialog_subscribeContext*);
    void(*sm_transportError)(struct tsip_dialog_subscribeContext*);
    void(*sm_unsubscribe)(struct tsip_dialog_subscribeContext*);

    void(*Default)(struct tsip_dialog_subscribeContext*);

    STATE_MEMBERS
};

extern const struct tsip_dialog_subscribeState tsip_dialog_subscribe_Started;
extern const struct tsip_dialog_subscribeState tsip_dialog_subscribe_Trying;
extern const struct tsip_dialog_subscribeState tsip_dialog_subscribe_Connected;
extern const struct tsip_dialog_subscribeState tsip_dialog_subscribe_Terminated;

struct tsip_dialog_subscribeContext
{
    FSM_MEMBERS(tsip_dialog_subscribe)
    struct tsip_dialog_subscribe *_owner;
};

extern void tsip_dialog_subscribeContext_Init(struct tsip_dialog_subscribeContext*, struct tsip_dialog_subscribe*);
extern void tsip_dialog_subscribeContext_EnterStartState(struct tsip_dialog_subscribeContext*);
extern void tsip_dialog_subscribeContext_sm_1xx(struct tsip_dialog_subscribeContext*, const tsip_message_t*);
extern void tsip_dialog_subscribeContext_sm_2xx(struct tsip_dialog_subscribeContext*, int, const tsip_response_t*);
extern void tsip_dialog_subscribeContext_sm_300_to_699(struct tsip_dialog_subscribeContext*, const tsip_response_t*);
extern void tsip_dialog_subscribeContext_sm_401_407_421_494(struct tsip_dialog_subscribeContext*, const tsip_response_t*);
extern void tsip_dialog_subscribeContext_sm_423(struct tsip_dialog_subscribeContext*, const tsip_response_t*);
extern void tsip_dialog_subscribeContext_sm_NOTIFY(struct tsip_dialog_subscribeContext*, int, const tsip_request_t*);
extern void tsip_dialog_subscribeContext_sm_cancel(struct tsip_dialog_subscribeContext*);
extern void tsip_dialog_subscribeContext_sm_error(struct tsip_dialog_subscribeContext*);
extern void tsip_dialog_subscribeContext_sm_hangup(struct tsip_dialog_subscribeContext*);
extern void tsip_dialog_subscribeContext_sm_refresh(struct tsip_dialog_subscribeContext*);
extern void tsip_dialog_subscribeContext_sm_send(struct tsip_dialog_subscribeContext*);
extern void tsip_dialog_subscribeContext_sm_transportError(struct tsip_dialog_subscribeContext*);
extern void tsip_dialog_subscribeContext_sm_unsubscribe(struct tsip_dialog_subscribeContext*);

#endif

/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
